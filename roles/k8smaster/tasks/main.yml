---

- name: Add k8s repo signing key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become: yes

- name: add k8s apt repository
  apt_repository: 
    repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main' 
    state: present  
  become: yes

- name: remove old version
  apt:
    pkg: "{{ item }}"
    state: absent
    update_cache: yes
  become: yes
  with_items:
    - kubeadm 
    - kubelet 
    - kubectl

- name: install k8s pkg
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - kubeadm 
    - kubelet 
    - kubectl
  become: yes

- name: make swap off 
  command: "swapoff --all"
  become: yes

- name: reset cluster
  become: yes
  shell: "kubeadm reset --force" 

- name: setup cluster
  become: yes
  shell: kubeadm init

- name: add config dir for user
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755
  become: yes

- name: copy admin.conf file
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /$HOME/.kube/config
    remote_src: yes
    owner: "{{ ansible_user | default(ansible_user_id) }}"
  become: yes


- name: config wave network 
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  become: yes

- name: get join command 
  shell: kubeadm token create --print-join-command
  register: JoinCommand
  become: yes
  run_once: true

- name: save token on master 
  shell: "echo {{ JoinCommand.stdout }} > ~/token.txt"
  become: yes

- name: Extract IP addresses from HOST file and save in ~/ips.txt
  shell: grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' "{{ansible_file_path}}"/hosts > ~/ips.txt
  become: yes

- name: Transfer join command in text file to worker node(s)
  shell : for i in `cat ~/ips.txt`; do scp -i "{{ key_file_path }}" -o StrictHostKeyChecking=no ~/token.txt "{{ ansible_user }}"@"$i":/home/"{{ ansible_user }}"/token.txt ; done
  become: yes
